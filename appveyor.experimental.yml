version: 66.66.66.{build}

# Do not build on tags (GitHub, Bitbucket, GitLab, Gitea)
skip_tags: true

# set clone depth
clone_depth: 1                     # clone entire repository history if not defined

branches:
  only:
  - /experimental\/*/

matrix:
  fast_finish: false

# https://www.appveyor.com/docs/build-environment/#build-worker-images
image: Visual Studio 2019

environment:
  # The following entries define the default values of the environment variables.
  # They can be overridden in AppVeyor | Settings | Environment.
  GE_TEST_SLEEP_SECONDS_ON_HANG: 0
  GE_TEST_LAUNCH_DEBUGGER_ON_HANG: 0
  # How many times to execute tests
  TEST_RUN_COUNT: 1
  # Execute unit tests
  RUN_UNIT_TESTS: 1
  # Execute integation tests
  RUN_INTEGRATION_TESTS: 1
  # Fail the build if any of the tests fail
  FAIL_BUILD_IF_TESTS_FAIL: 1

init:
  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

# Build settings, not to be confused with "before_build" and "after_build".
# "project" is relative to the original build directory and not influenced by directory changes in "before_build".
build:
  # enable MSBuild parallel builds
  parallel: true
  # MSBuild verbosity level
  verbosity: minimal

install:
- cmd: echo %APPVEYOR_REPO_COMMIT%
- cmd: echo %APPVEYOR_PULL_REQUEST_HEAD_COMMIT%
- cmd: git submodule update --init --recursive
- cmd: echo /logger:"%ProgramFiles%\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll">> Directory.Build.rsp
- cmd: |-
    cd scripts
    C:\\Python35\\python set_version_to.py -v %APPVEYOR_BUILD_VERSION% -t %APPVEYOR_BUILD_VERSION%
    cd ..


# to run your custom scripts instead of automatic MSBuild
build_script:
- ps: |
    # for release branches mark the repo as clean
    if (!$env:APPVEYOR_PULL_REQUEST_TITLE -and $env:APPVEYOR_REPO_BRANCH.StartsWith("release/")) {
      & .\scripts\Mark-RepoClean.ps1
    }

    # if building a temporary merge with master, reset the git revision to the HEAD of the PR, keeping the files of the merge of course
    if ($env:APPVEYOR_PULL_REQUEST_HEAD_COMMIT -and ($env:APPVEYOR_REPO_COMMIT -ne $env:APPVEYOR_PULL_REQUEST_HEAD_COMMIT))
    {
      git reset --soft "$env:APPVEYOR_PULL_REQUEST_HEAD_COMMIT" --
    }

    # build
    & .\cibuild.cmd -restore -build -buildNative -logFileName build.binlog
    if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }

    # for pull-requests we get merge-commits, and we reset to the actual PR commit, for the build contains the correct hash
    # to verify the localisation was done correctly we don't need the original hash, so reset it back
    # refer to https://github.com/gitextensions/gitextensions/issues/7979
    if ($env:APPVEYOR_PULL_REQUEST_HEAD_COMMIT) {
      git reset $env:APPVEYOR_PULL_REQUEST_HEAD_COMMIT --quiet -- "GitUI/Translation/English.xlf" "GitUI/Translation/English.Plugins.xlf"
      git checkout                                     --force -- "GitUI/Translation/English.xlf" "GitUI/Translation/English.Plugins.xlf"
    }

    # it would be nice to run '.\cibuild.cmd -loc' but it doesn't work without `-build` switch :\
    Push-Location .\GitExtensions
    dotnet msbuild /t:_UpdateEnglishTranslations /p:RunTranslationApp=true /v:m
    if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }
    Pop-Location


# to run your custom scripts instead of automatic tests
test_script:
- ps: |
    Write-Host "Tests disabled"


# scripts to run after tests
after_test:
- ps: |
    Write-Host "Preparing build artifacts..."
    & .\cibuild.cmd -publish -logFileName publish.binlog
    if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }


artifacts:
  - path: artifacts\log\**\*.binlog
  - path: artifacts\publish\*.zip

#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
